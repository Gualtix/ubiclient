{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/ubiqui/ubiqui.component.ts","webpack:///src/app/components/ubiqui/ubiqui.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","texto","lat","lng","zoom","target","latitude","longitude","options","enableHighAccuracy","timeout","maximumAge","navigator","geolocation","watchPosition","success","pos","crd","coords","console","log","error","position","that","impi","uno","dos","err","warn","message","selector","templateUrl","styleUrls","AppModule","apiKey","declarations","providers","bootstrap","UbiquiComponent","environment","production","bootstrapModule","catch"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { callbackify } from 'util';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  title = 'ubiclient';\n  texto : string = 'Wenceslau Braz - Cuidado com as cargas';\n  lat: number    = 14.589282;\n  lng: number    = -90.551469;\n  zoom: number   = 15;\n\n  target = {\n    latitude : 14.556523,\n    longitude: -90.733872\n  };\n  \n  options = {\n    enableHighAccuracy: true,\n    timeout: 5000,\n    maximumAge: 0\n  };\n\n\n  ngOnInit(){\n    if (navigator.geolocation) {\n      navigator.geolocation.watchPosition(position => {\n        this.lat = position.coords.latitude;\n        this.lng = position.coords.longitude;\n        this.zoom = 16;\n        console.log('hola');\n      },error => {\n\n      },this.options);\n    }\n  }\n\n\n  \n\n  id = navigator.geolocation.watchPosition(function success(pos){\n    \n    var crd = pos.coords;\n    console.log(crd.latitude);\n    console.log(crd.longitude);\n  }, this.error, this.options);\n\n  constructor(){\n    //if (navigator.geolocation) {\n    //  navigator.geolocation.getCurrentPosition(this.displayLocationInfo);\n   // }\n  }\n\n  successe(pos){\n    var crd = pos.coords;\n    var that=this;\n    console.log(this);\n    //console.log(crd);\n    //console.log(this.lat);\n    //if(crd.latitude != null && this.lat != null){\n      //this.lat = crd.latitude;\n    // }\n    //this.lat = crd.latitude;\n    //this.lng = crd.longitude;\n    console.log(crd.latitude);\n    console.log(crd.longitude);\n    this.impi(\"sdffe\",\"fse\");\n\n    //if (this.target.latitude === crd.latitude && this.target.longitude === crd.longitude) {\n    //  console.log('Congratulations, you reached the target');\n    //  navigator.geolocation.clearWatch(this.id);\n    //}//\n  }\n\n  impi(uno,dos){\n    console.log(uno,dos);\n  }\n\n  error(err){\n    console.warn('ERROR(' + err.code + '): ' + err.message);\n  }\n\n  OnInit(){\n    //if (navigator.geolocation) {\n    //  navigator.geolocation.getCurrentPosition(this.displayLocationInfo);\n    //}\n  }\n\n  displayLocationInfo(position) {\n    const lng = position.coords.longitude;\n    const lat = position.coords.latitude;\n    console.log(\"holasxD\");\n    console.log(`longitude: ${ lng } | latitude: ${ lat }`);\n  }\n\n}\n\n\n","\n<div class=\"cnt\">\n  <agm-map [latitude]=\"lat\" [zoom]=\"zoom\" [longitude]=\"lng\">\n    <agm-marker  [latitude]=\"lat\" [longitude]=\"lng\"></agm-marker>\n  </agm-map>\n</div>\n\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent }     from './app.component';\nimport { UbiquiComponent }  from './components/ubiqui/ubiqui.component';\nimport { AgmCoreModule }    from '@agm/core';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UbiquiComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyDSzaXvA5D65loGW47U6NIy2Yfq5QlNEvg'\n    })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ubiqui',\n  templateUrl: './ubiqui.component.html',\n  styleUrls: ['./ubiqui.component.css']\n})\nexport class UbiquiComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>ubiqui works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}